apiVersion: v1
items:
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: spark-master
    namespace: "spark"
    labels:
      app: "spark-master-1"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "spark-master-1"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "spark-master-1"
        creationTimestamp: null
      spec:
        hostname: spark-master-1
        containers:
        - env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                fieldPath: metadata.namespace
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: SPARK_PUBLIC_DNS
            value: kglazunov-vm-k8.minsk.epam.com
          - name: SPARK_MASTER_PORT
            value: "7077"
          image: spark-master:2.4.3
          imagePullPolicy: Never
          name: spark-master
          ports:
          - containerPort: 8080
          - containerPort: 7077
          resources: {}
          volumeMounts:
          - mountPath: /opt/spark-apps
            subPath: spark-apps
            name: nfs-spark
          - mountPath: /opt/spark-data
            subPath: spark-data
            name: nfs-spark
        restartPolicy: Always
        volumes:
        - name: nfs-spark
          persistentVolumeClaim:
            claimName: nfs-docker-spark
  status: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: spark-worker-1
    namespace: "spark"
    labels:
      app: "spark-worker-1"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "spark-worker-1"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "spark-worker-1"
        creationTimestamp: null
      spec:
        hostname: spark-worker-1
        containers:
        - env:
          - name: SPARK_DRIVER_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_DRIVER_MEMORY
                name: spark-worker-1-env-spark-worker-sh
          - name: SPARK_EXECUTOR_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_EXECUTOR_MEMORY
                name: spark-worker-1-env-spark-worker-sh
          - name: SPARK_MASTER
            valueFrom:
              configMapKeyRef:
                key: SPARK_MASTER
                name: spark-worker-1-env-spark-worker-sh
          - name: SPARK_WORKER_CORES
            valueFrom:
              configMapKeyRef:
                key: SPARK_WORKER_CORES
                name: spark-worker-1-env-spark-worker-sh
          - name: SPARK_WORKER_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_WORKER_MEMORY
                name: spark-worker-1-env-spark-worker-sh
          image: spark-worker:2.4.3
          imagePullPolicy: Never
          name: spark-worker-1
          ports:
          - containerPort: 8081
          resources: {}
          volumeMounts:
          - mountPath: /opt/spark-apps
            subPath: spark-apps
            name: nfs-spark
          - mountPath: /opt/spark-data
            subPath: spark-data
            name: nfs-spark
        restartPolicy: Always
        volumes:
        - name: nfs-spark
          persistentVolumeClaim:
            claimName: nfs-docker-spark
  status: {}
- apiVersion: v1
  data:
    SPARK_DRIVER_MEMORY: 128m
    SPARK_EXECUTOR_MEMORY: 256m
    SPARK_MASTER: spark://spark-master-1:7077
    SPARK_MASTER_HOST: spark-master-1
    SPARK_WORKER_CORES: "1"
    SPARK_WORKER_MEMORY: 1G
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app: spark-worker-1
    name: spark-worker-1-env
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: spark-worker-2
    namespace: "spark"
    labels:
      app: "spark-worker-2"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "spark-worker-2"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "spark-worker-2"
        creationTimestamp: null
      spec:
        hostname: spark-worker-2
        containers:
        - env:
          - name: SPARK_DRIVER_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_DRIVER_MEMORY
                name: spark-worker-2-env-spark-worker-sh
          - name: SPARK_EXECUTOR_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_EXECUTOR_MEMORY
                name: spark-worker-2-env-spark-worker-sh
          - name: SPARK_MASTER
            valueFrom:
              configMapKeyRef:
                key: SPARK_MASTER
                name: spark-worker-2-env-spark-worker-sh
          - name: SPARK_WORKER_CORES
            valueFrom:
              configMapKeyRef:
                key: SPARK_WORKER_CORES
                name: spark-worker-2-env-spark-worker-sh
          - name: SPARK_WORKER_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_WORKER_MEMORY
                name: spark-worker-2-env-spark-worker-sh
          image: spark-worker:2.4.3
          imagePullPolicy: Never
          name: spark-worker-2
          ports:
          - containerPort: 8081
          resources: {}
          volumeMounts:
          - mountPath: /opt/spark-apps
            subPath: spark-apps
            name: nfs-spark
          - mountPath: /opt/spark-data
            subPath: spark-data
            name: nfs-spark
        restartPolicy: Always
        volumes:
        - name: nfs-spark
          persistentVolumeClaim:
            claimName: nfs-docker-spark
  status: {}
- apiVersion: v1
  data:
    SPARK_DRIVER_MEMORY: 128m
    SPARK_EXECUTOR_MEMORY: 256m
    SPARK_MASTER: spark://spark-master-1:7077
    SPARK_MASTER_HOST: spark-master-1
    SPARK_WORKER_CORES: "1"
    SPARK_WORKER_MEMORY: 1G
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app: spark-worker-2
    name: spark-worker-2-env
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    creationTimestamp: null
    name: spark-worker-3
    namespace: "spark"
    labels:
      app: "spark-worker-3"
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: "spark-worker-3"
    strategy:
      type: Recreate
    template:
      metadata:
        labels:
          app: "spark-worker-3"
        creationTimestamp: null
      spec:
        hostname: spark-worker-3
        containers:
        - env:
          - name: SPARK_DRIVER_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_DRIVER_MEMORY
                name: spark-worker-3-env-spark-worker-sh
          - name: SPARK_EXECUTOR_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_EXECUTOR_MEMORY
                name: spark-worker-3-env-spark-worker-sh
          - name: SPARK_MASTER
            valueFrom:
              configMapKeyRef:
                key: SPARK_MASTER
                name: spark-worker-3-env-spark-worker-sh
          - name: SPARK_WORKER_CORES
            valueFrom:
              configMapKeyRef:
                key: SPARK_WORKER_CORES
                name: spark-worker-3-env-spark-worker-sh
          - name: SPARK_WORKER_MEMORY
            valueFrom:
              configMapKeyRef:
                key: SPARK_WORKER_MEMORY
                name: spark-worker-3-env-spark-worker-sh
          image: spark-worker:2.4.3
          imagePullPolicy: Never
          name: spark-worker-3
          ports:
          - containerPort: 8081
          resources: {}
          volumeMounts:
          - mountPath: /opt/spark-apps
            subPath: spark-apps
            name: nfs-spark
          - mountPath: /opt/spark-data
            subPath: spark-data
            name: nfs-spark
        restartPolicy: Always
        volumes:
        - name: nfs-spark
          persistentVolumeClaim:
            claimName: nfs-docker-spark
  status: {}
- apiVersion: v1
  data:
    SPARK_DRIVER_MEMORY: 128m
    SPARK_EXECUTOR_MEMORY: 256m
    SPARK_MASTER: spark://spark-master-1:7077
    SPARK_MASTER_HOST: spark-master-1
    SPARK_WORKER_CORES: "1"
    SPARK_WORKER_MEMORY: 1G
  kind: ConfigMap
  metadata:
    creationTimestamp: null
    labels:
      app: spark-worker-3
    name: spark-worker-3-env
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spark-master-1
    name: spark-master-1
  spec:
    clusterIP: None
    type: ClusterIP
    ports:
    - name: "8080"
      port: 8080
      targetPort: 8080
    - name: "7077"
      port: 7077
      targetPort: 7077
    selector:
      app: spark-master-1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spark-worker-1
    name: spark-worker-1
  spec:
    clusterIP: None
    type: ClusterIP
    ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      app: spark-worker-1
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spark-worker-2
    name: spark-worker-2
  spec:
    clusterIP: None
    type: ClusterIP
    ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      app: spark-worker-2
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      app: spark-worker-3
    name: spark-worker-3
  spec:
    clusterIP: None
    type: ClusterIP
    ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
    selector:
      app: spark-worker-3
kind: List
metadata: {}
