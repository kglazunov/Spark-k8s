apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  namespace: spark
  name: nfs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      role: nfs-server
  template:
    metadata:
      labels:
        role: nfs-server
    spec:
      containers:
      - name: nfs-server
        image: gcr.io/google_containers/volume-nfs:0.8
        ports:
        - name: nfs
          containerPort: 2049
        - name: mountd
          containerPort: 20048
        - name: rpcbind
          containerPort: 111
        securityContext:
          privileged: true
        volumeMounts:
        - mountPath: /exports
          name: exports
      volumes:
      - name: exports
        emptyDir: {}
---
apiVersion: extensions/v1beta1
kind: Service
metadata:
  namespace: spark
  name: nfs-server
spec:
  ports:
  - name: nfs
    port: 2049
  - name: mountd
    port: 20048
  - name: rpcbind
    port: 111
  selector:
    role: nfs-server
  clusterIP: "10.107.195.27"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  namespace: spark
  name: nfs-docker-spark
spec:
  capacity:
    storage: 100Mi
  accessModes:
    - ReadWriteMany
  storageClassName: nfs
  nfs:
#    server: nfs-server.spark.svc.cluster.local
    server: 10.107.195.27
    path: "/exports"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-docker-spark
  namespace: spark
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: nfs
  resources:
    requests:
      storage: 100Mi
